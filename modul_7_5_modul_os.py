# Домашнее задание по теме "Файлы в операционной системе"
# Цель задания:
# Освоить работу с файловой системой в Python, используя модуль os.
import os
import time
# Научиться применять методы os.walk, os.path.join, os.path.getmtime, os.path.dirname,
# os.path.getsize и использование модуля time для корректного отображения времени.
# Задание:
# Создайте новый проект или продолжите работу в текущем проекте.
# Используйте os.walk для обхода каталога, путь к которому указывает переменная directory
# Метод os.walk предназначен для рекурсивного обхода дерева каталогов. Он позволяет обойти все файлы и каталоги в заданном каталоге и его подкаталогах.
# Синтаксис: os.walk(top, topdown=True, onerror=None, followlinks=False)
# Параметры:
# top — начальный каталог для обхода.
# topdown — если True, сначала обрабатываются верхние уровни иерархии, затем нижележащие.
# onerror — обработчик ошибок.
# followlinks — следует ли следовать символическим ссылкам.
for root, dirs, files in os.walk('.', topdown=True): # os.walk: Используется для рекурсивного обхода дерева каталогов.

    for file in files:
        filepath = os.path.join(root, file)  # os.path.join: Объединяет пути к файлам и каталогам.
        filetime = os.path.getmtime(filepath)  # os.path.getmtime: Возвращает время последнего изменения файла.
        formatted_time = time.strftime('%d-%m-%Y %H:%M', time.localtime(filetime))  # time.strftime: Форматирует время для вывода.
        filesize = os.path.getsize(filepath) # os.path.getsize: Возвращает размер файла в байтах.
        parent_dir = os.path.dirname(filepath) # os.path.dirname: Возвращает родительскую директорию файла.
        print(f'Обнаружен файл: {file}, Путь: {filepath}, Размер: {filesize} байт, '
              f'Время изменения: {formatted_time}, Родительская директория: {parent_dir}')

        # Использование функции os.walk для рекурсивного обхода дерева каталогов, начиная с текущего каталога (.)
    # topdown — если True, сначала обрабатываются верхние уровни иерархии, затем нижележащие.
    # '.' по текущему катологу

# Метод os.path.join в Python используется для объединения нескольких путей к файлам и каталогам в один путь. Это очень удобно, так как устраняет необходимость вручную комбинировать пути, избегая ошибок, связанных с различными операционными системами и правилами разделения путей.
# Используйте os.path.getmtime и модуль time для получения и отображения времени последнего изменения файла.
# Используйте os.path.getsize для получения размера файла.
# Используйте os.path.dirname для получения родительской директории файла.